class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        int depth = 0;
        Set<String> set = new HashSet(wordList);
        
        Queue<String> queue = new LinkedList();
        Set<String> visited = new HashSet();
        queue.add(beginWord);
        while( !queue.isEmpty() ) {
            depth++;
            int size = queue.size();
            for (int i=0;i<size;i++) {
                String word = queue.poll();
                if ( visited.contains(word) ) continue;
                if ( word.equals(endWord)) return depth;
                visited.add(word);
                
                for (int j=0;j<word.length();j++) {
                    StringBuilder sb = new StringBuilder(word);
                    for (int k=0;k<26;k++)
                    {
                        sb.setCharAt(j,(char) (k+'a'));
                        if ( set.contains(sb.toString()))
                            queue.add(sb.toString());
                    }
                }
            
            }
        }
        
        return 0;
    }
}
