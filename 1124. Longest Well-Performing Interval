class Solution {
    public int longestWPI(int[] hours) {
        int[] dp = new int[hours.length];
        for (int i=0;i<hours.length;i++)
            if ( hours[i] > 8)
                dp[i] = 1;
        else
            dp[i] = -1;
        
        int max = 0;
        int score = 0;
        Map<Integer,Integer> map = new HashMap();
        for (int i=0;i<dp.length;i++)
        {
            score += dp[i];
            if ( score > 0 )
                max = i + 1;
            else
            {
                if ( !map.containsKey(score) )
                    map.put(score,i);
                if ( map.containsKey(score-1))
                max = Math.max(max, i - map.get(score-1));
            }
        }
        return max;
        
    }
}
